Test suite spec: RUNNING...
Testing...
  Linear.Grammar
    LinAst
      `multLin` should be idempotent:                     OK (0.02s)
        +++ OK, passed 100 tests.
      `addLin` should not add or remove variables:        OK
        +++ OK, passed 100 tests.
    LinVar
      should generate non-empty variable names:           OK (0.02s)
        +++ OK, passed 100 tests.
    Ineq
      `standardize` should be idempotent:                 OK (1.22s)
        +++ OK, passed 100 tests.
  Linear.Constraints.Slack
    `makeSlackVars` should result in only Equalities:     OK
      +++ OK, passed 100 tests.
    `makeSlackVars` should be idempotent:                 OK (24.91s)
      +++ OK, passed 100 tests.
  Linear.Constraints.Cassowary
    `flatten`
      is non-destructive:                                 OK (0.62s)
        +++ OK, passed 100 tests.
      is idempotent:                                      OK (0.62s)
        +++ OK, passed 100 tests.
      results in 1:                                       OK (0.66s)
        +++ OK, passed 100 tests.
    `substitute`
      on self should result in all 0s:                    OK (0.64s)
        +++ OK, passed 100 tests.
      results in 0 for any target:                        OK (1.21s)
        +++ OK, passed 100 tests.
    Unit Tests
      should pass Finite Mathematics Lesson 4, Example 1: OK
      should pass Finite Mathematics Lesson 4, Example 2: OK
      should pass Example of Simplex Procedure:           OK

All 14 tests passed (29.98s)
Test suite spec: PASS
Test suite logged to: dist/test/cassowary-haskell-0.0.0-spec.log
